# Cara 1
print("Hello World")
# Cara 2
my_str <- "Hello World"
print(my_str)
# - logical
my_logical <- TRUE
print(my_logical)
class(my_logical)
# - character
my_string <- "Aryajaya Alamsyah"
print(my_string)
class(my_string)
# - numeric
my_numeric <- 11140910000101
print(format(my_numeric, scientific = FALSE))
class(my_numeric)
# - input
{
nama <- readline(prompt="Masukan nama anda: ")
nim <- readline(prompt="Masukan nim anda: ")
}
# - output cara 1
print(paste("Nama anda : ", nama))
print(paste("NIM anda : ", nim))
# - output cara 2
sprintf("Nama anda : %s", nama)
sprintf("Nim anda : %s", nim)
# - output cara 3
cat("Nama anda :",nim, "\nNim anda :",nama)
# Runtunan - menghitung valome balok
# input
panjang <- 10
lebar <- 10
tinggi <- 5
# proses
volume <- panjang * lebar * tinggi
# output
sprintf("Volume balok : %i", volume)
# Percabangan - menentukan angka ganjil genap
bilangan <- 5
if(bilangan %% 2 == 1){
sprintf("%i merupakan bilangan ganjil", bilangan)
}else{
sprintf("%i merupakan bilangan genap", bilangan)
}
# Perulangan - menampilkan angka 1 sampai 5
for(i in 1:5){
print(i)
}
i <- 0
while(i < 5){
print(i)
i = i + 1
}
# - Array 1 Dimensi
# input
arr_1 <- matrix(c(1,2,3,4), nrow=4, ncol=1, byrow=TRUE)
arr_2 <- matrix(c(5,6,7,8), nrow=4, ncol=1, byrow=TRUE)
# proses
arr_3 <- arr_1 + arr_2
# output
print(arr_3)
# - Array 2 Dimensi
# input
arr_1 <- matrix(c(1,2,3,4), nrow=2, ncol=2, byrow=TRUE)
arr_2 <- matrix(c(5,6,7,8), nrow=2, ncol=2, byrow=TRUE)
# proses
arr_3 <- arr_1 + arr_2
# output
print(arr_3)
# 6. Membuat Fungsi
# Contoh 1 - menghitung array 2 D
# fungsi hitung array
hitung_arr <- function(temp_arr_1, temp_arr_2){
hasil = temp_arr_1 + temp_arr_2
return(hasil)
}
# input
arr_1 <- matrix(c(1,2,3,4), nrow=2, ncol=2, byrow=TRUE)
arr_2 <- matrix(c(5,6,7,8), nrow=2, ncol=2, byrow=TRUE)
# proses
arr_3 <- hitung_arr(arr_1, arr_2)
# output
print(arr_3)
# Contoh 2 - hitung luas lingkaran
# membuat fungsi hitung lingkaran
luas_lingkaran <- function(temp_jari_jari){
# membuat kondisi.
# Phi 22/7 jika jari-jari kelipatan 7. Phi 3.14 jika jari-jari bukan kelipatan 7
if(temp_jari_jari %% 7 == 0){
luas_lingkaran <- (22/7) * temp_jari_jari * temp_jari_jari
}
else{
luas_lingkaran <- 3.14 * temp_jari_jari * temp_jari_jari
}
return(luas_lingkaran)
}
# memanggil fungsi luas lingkaran
luas_lingkaran(10)
# DEKLARASI - pustaka
library(readr) # membaca file excel/csv/txt/json
library(dplyr) # memanipulasi data
library(ggplot2) # membuat diagram
library(plotly) # memperindah diagram
# DEKLARASI - fungsi
hitung_nilai <- function(temp_formatif, temp_uts, temp_uas){
hasil = temp_formatif*0.4 + temp_uts*0.3 + temp_uas*0.3
return(hasil)
}
hitung_huruf <- function(nilai_akhir) {
n=length(nilai_akhir)
huruf=NULL
for(i in 1:n) {
if(nilai_akhir[i] >= 80) {
huruf[i] = "A"
} else if(nilai_akhir[i] >= 70) {
huruf[i] = "B"
} else if(nilai_akhir[i] >= 60) {
huruf[i] = "C"
} else if(nilai_akhir[i] >= 50) {
huruf[i] = "D"
} else{
huruf[i] = "E"
}
}
return(huruf)
}
# ALGORITMA
# - input dataset
df <- read.csv("D:/Bahan Ajar Big Data/dataset/dataset_hitung_nilai.csv")
# - inputan dataset dilakukan modifikasi tipe data
# karena kolom nim dibaca numeric. Sementara kolom nim tidak dilakukan operasi penjumlahan
df<- data.frame(
nim = as.character(df$nim),
formatif = as.numeric(df$formatif),
uts = as.numeric(df$uts),
uas = as.numeric(df$uas)
)
# Menampilkan isi data
head(df)
# Menampilkan struktur dataset
str(df)
# Menampilkan ringkasan statistik dataset
summary(df)
# proses (menghitung nilai akhir)
nilai_akhir <- hitung_nilai(df$formatif, df$uts, df$uas)
nilai_akhir
# proses (menghitung nilai huruf)
nilai_huruf <- hitung_huruf(nilai_akhir)
nilai_huruf
# proses (menggabung kolom nilai akhir, nilai huruf dengan df)
data_mhs <- cbind(df, nilai_akhir, nilai_huruf)
# output 1 - memastikan data sesuai harapan
head(data_mhs)
str(data_mhs)
summary(data_mhs)
# output 2 - membuat file csv
# - row.names = FALSE untuk menghilangkan indexing
write.csv(data_mhs, "D:/Bahan Ajar Big Data/dataset/dataset_hitung_nilai_output.csv", row.names = FALSE)
# output 3 - membuat histogrm. Histogram adalah grafik untuk melihat sebaran data
# tanpa pustaka tambahan
hist(data_mhs$nilai_akhir)
# menggunakan pustaka ggplot2
ggplot(data=data_mhs, aes(x=nilai_akhir)) +
geom_histogram(aes(y=..density..),binwidth=5, colour="blue", fill="grey")+
geom_density(alpha=.1, fill="yellow") +
scale_x_continuous(name = "Nilai Akhir") +
scale_y_continuous(name = "Frequensi") +
ggtitle("Sebaran data nilai akhir")
# Cara 1
print("Hello World")
# Cara 2
my_str <- "Hello World"
print(my_str)
# - logical
my_logical <- TRUE
print(my_logical)
class(my_logical)
# - character
my_string <- "Aryajaya Alamsyah"
print(my_string)
class(my_string)
# - numeric
my_numeric <- 11140910000101
print(format(my_numeric, scientific = FALSE))
class(my_numeric)
# - input
{
nama <- readline(prompt="Masukan nama anda: ")
nim <- readline(prompt="Masukan nim anda: ")
}
# - output cara 1
print(paste("Nama anda : ", nama))
print(paste("NIM anda : ", nim))
# - output cara 2
sprintf("Nama anda : %s", nama)
sprintf("Nim anda : %s", nim)
# - output cara 3
cat("Nama anda :",nim, "\nNim anda :",nama)
# Runtunan - menghitung valome balok
# input
panjang <- 10
lebar <- 10
tinggi <- 5
# proses
volume <- panjang * lebar * tinggi
# output
sprintf("Volume balok : %i", volume)
# Percabangan - menentukan angka ganjil genap
bilangan <- 5
if(bilangan %% 2 == 1){
sprintf("%i merupakan bilangan ganjil", bilangan)
}else{
sprintf("%i merupakan bilangan genap", bilangan)
}
# Perulangan - menampilkan angka 1 sampai 5
for(i in 1:5){
print(i)
}
i <- 0
while(i < 5){
print(i)
i = i + 1
}
# - Array 1 Dimensi
# input
arr_1 <- matrix(c(1,2,3,4), nrow=4, ncol=1, byrow=TRUE)
arr_2 <- matrix(c(5,6,7,8), nrow=4, ncol=1, byrow=TRUE)
# proses
arr_3 <- arr_1 + arr_2
# output
print(arr_3)
# - Array 2 Dimensi
# input
arr_1 <- matrix(c(1,2,3,4), nrow=2, ncol=2, byrow=TRUE)
arr_2 <- matrix(c(5,6,7,8), nrow=2, ncol=2, byrow=TRUE)
# proses
arr_3 <- arr_1 + arr_2
# output
print(arr_3)
# 6. Membuat Fungsi
# Contoh 1 - menghitung array 2 D
# fungsi hitung array
hitung_arr <- function(temp_arr_1, temp_arr_2){
hasil = temp_arr_1 + temp_arr_2
return(hasil)
}
# input
arr_1 <- matrix(c(1,2,3,4), nrow=2, ncol=2, byrow=TRUE)
arr_2 <- matrix(c(5,6,7,8), nrow=2, ncol=2, byrow=TRUE)
# proses
arr_3 <- hitung_arr(arr_1, arr_2)
# output
print(arr_3)
# Contoh 2 - hitung luas lingkaran
# membuat fungsi hitung lingkaran
luas_lingkaran <- function(temp_jari_jari){
# membuat kondisi.
# Phi 22/7 jika jari-jari kelipatan 7. Phi 3.14 jika jari-jari bukan kelipatan 7
if(temp_jari_jari %% 7 == 0){
luas_lingkaran <- (22/7) * temp_jari_jari * temp_jari_jari
}
else{
luas_lingkaran <- 3.14 * temp_jari_jari * temp_jari_jari
}
return(luas_lingkaran)
}
# memanggil fungsi luas lingkaran
luas_lingkaran(10)
# Gimana gampang kan bahasa R ................ ?
# Gimana gampang kan bahasa R ................ ?
